{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","sortType","NONE","isReversed","handleSortByAlphabet","setState","ALPHABET","handleSortByLenght","LENGTH","handleReverse","handleReset","this","goods","visibleGoods","sort","goods1","goods2","localeCompare","length","reverse","getReorderedGoods","isVisibleReset","className","type","classNames","onClick","map","good","React","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA2CE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,SAAUJ,EAASK,KACnBC,YAAY,GAHhB,EAMEC,qBAAuB,WACrB,EAAKC,SAAS,CAAEJ,SAAUJ,EAASS,YAPvC,EAUEC,mBAAqB,WACnB,EAAKF,SAAS,CAAEJ,SAAUJ,EAASW,UAXvC,EAcEC,cAAgB,WACd,EAAKJ,UAAS,SAAAL,GAAK,MAAK,CAAEG,YAAaH,EAAMG,gBAfjD,EAkBEO,YAAc,WACZ,EAAKL,SAAS,CACZJ,SAAUJ,EAASK,KACnBC,YAAY,KArBlB,4CAyBE,WACE,MAAiCQ,KAAKX,MAA9BC,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,WACZS,EA3DH,SACLA,EADK,GAGJ,IADCX,EACF,EADEA,SAAUE,EACZ,EADYA,WAGNU,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAAQC,GACzB,OAAQf,GACN,KAAKJ,EAASS,SACZ,OAAOS,EAAOE,cAAcD,GAE9B,KAAKnB,EAASW,OACZ,OAAOO,EAAOG,OAASF,EAAOE,OAEhC,QACE,OAAOrB,EAASK,SAIlBC,GACFU,EAAaM,UAGRN,EAmCSO,CAAkBtB,EAAiBa,KAAKX,OAChDqB,EAAiBlB,GAAcF,IAAaJ,EAASK,KAE3D,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBAAkB,CACtC,WAAYvB,IAAaJ,EAASS,WAEpCmB,QAASd,KAAKP,qBALhB,iCAUA,wBACEmB,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,WAAYvB,IAAaJ,EAASW,SAEpCiB,QAASd,KAAKJ,mBALhB,4BAUA,wBACEgB,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,YAAarB,IAEfsB,QAASd,KAAKF,cALhB,qBASCY,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAASd,KAAKD,YAHhB,sBAUJ,6BACGE,EAAMc,KACL,SAAAC,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,eA3E5C,GAAyBC,IAAMC,eC1D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3538f2f5.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((goods1, goods2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return goods1.localeCompare(goods2);\n\n      case SortType.LENGTH:\n        return goods1.length - goods2.length;\n\n      default:\n        return SortType.NONE;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ninterface State {\n  isReversed: boolean,\n  sortType: SortType,\n}\n\nexport class App extends React.PureComponent<{}, State> {\n  state: Readonly<State> = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  handleSortByAlphabet = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  handleSortByLenght = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  handleReverse = () => {\n    this.setState(state => ({ isReversed: !state.isReversed }));\n  };\n\n  handleReset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const goods = getReorderedGoods(goodsFromServer, this.state);\n    const isVisibleReset = isReversed || sortType !== SortType.NONE;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames('button is-info', {\n              'is-light': sortType !== SortType.ALPHABET,\n            })}\n            onClick={this.handleSortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-success', {\n              'is-light': sortType !== SortType.LENGTH,\n            })}\n            onClick={this.handleSortByLenght}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-warning', {\n              'is-light': !isReversed,\n            })}\n            onClick={this.handleReverse}\n          >\n            Reverse\n          </button>\n          {isVisibleReset && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.handleReset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {goods.map(\n            good => <li data-cy=\"Good\" key={good}>{good}</li>,\n          )}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}